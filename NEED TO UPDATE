SELECT * FROM chinook.albums;

/*Show Customers (their full names, customer ID, 
and country) who are not in the US.*/

SELECT customerid, firstname, lastname,country
FROM chinook.customers
WHERE country <> 'USA';

/*Show only the Customers from Brazil.*/
SELECT * FROM chinook.customers
WHERE country LIKE 'brazil';

/*Find the Invoices of customers who are from Brazil. The resulting table 
should show the customer's full name, Invoice ID, Date of the invoice, and
 billing country.*/
 
SELECT cust.firstname, cust.lastname, invoice.billingcountry, invoice.invoicedate, invoice.invoiceid
FROM chinook.invoices as invoice
LEFT JOIN chinook.customers AS cust
ON invoice.customerid=cust.customerid
WHERE country like 'brazil';

/*Show the Employees who are Sales Agents.*/
SELECT *
FROM chinook.employees
WHERE title LIKE '%agent%';

SELECT * FROM chinook.Employees
WHERE Title = "Sales Support Agent" ;

/*Find a unique/distinct list of billing countries from the Invoice table*/

SELECT distinct billingcountry
FROM chinook.invoices;

/*Provide a query that shows the invoices associated with each sales agent. 
The resulting table should include the Sales Agent's full name.*/


SELECT emp.firstname, emp.lastname, emp.title, inv.invoiceid
FROM chinook.employees AS emp
LEFT JOIN chinook.invoices AS inv ON inv.invoiceid = emp.employeeid
WHERE title LIKE '%agent%';

SELECT emp.LastName, emp.Firstname, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId
;

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/

SELECT emp.lastname, emp.firstname, cust.firstname, cust.lastname, cust.country, inv.total
FROM chinook.employees emp
JOIN chinook.customers cust ON cust.supportrepid = emp.employeeid
JOIN chinook.invoices inv ON inv.customerid = cust.customerid;

/*How many Invoices were there in 2009?*/

SELECT total, ivoicedate
FROM chinook.invoices
WHERE invoicedate LIKE '&2009&';

SELECT total
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*What are the total sales for 2009?*/

SELECT SUM(invoiceid), invoicedate
FROM chinook.invoices
WHERE invoicedate LIKE '2009-01-01 - 2009-12-31';

SELECT ROUND(SUM(Total))
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*Write a query that includes the purchased track name with each invoice line ID.*/

SELECT alb.title, inv.invoicelineid
FROM chinook.albums as alb
JOIN chinook.inovice_items as inv ON inv.invoiceid = alb.albumid;

SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
JOIN chinook.Tracks t ON i.TrackId = t.TrackId;

/*Write a query that includes the purchased track name AND artist name with each invoice line ID.*/

SELECT t.name, a.name, inv.invoiceid
FROM chinook.tracks as t
JOIN chinook.artists as a ON a.artistid = t.trackid
JOIN chinook.invoice_items as inv ON inv.trackid = t.trackid;

SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.*/

SELECT t.Name as 'Song  Title', a.Title as Title, m.Name as 'Media Type', g.Name as Genre
FROM chinook.tracks AS t
JOIN chinook.albums as a ON a.AlbumId = t.AlbumId
JOIN chinook.media_types as m ON m.MediaTypeId = t.MediaTypeId
JOIN chinook.genres as g ON g.GenreId = t.GenreId;

/*Show the total sales made by each sales agent.*/

SELECT emp.firstname, emp.lastname, ROUND(SUM(inv.total))
FROM chinook.employees as emp
JOIN chinook.customers as cust
ON cust.supportrepid = emp.employeeid
JOIN chinook.invoices as inv
ON inv.customerid = cust.customerid
WHERE title LIKE 'Sales Support Agent'
AND inv.invoicedate LIKE '2009%'
GROUP BY emp.firstname
ORDER BY round(sum(inv.total)) desc LIMIT 1;

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
