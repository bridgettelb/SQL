# In this SQL code, I created multiple tables to aggregate data and use joints to sort out relevant information.

CREATE TABLE Singers
(id INTEGER PRIMARY KEY AUTOINCREMENT, 
name TEXT,
genre INTEGER
);

INSERT INTO Singers (name, genre) VALUES ("Justin Bieber", 1);
INSERT INTO Singers (name, genre) VALUES ("Lil Wayne", 4);
INSERT INTO Singers (name, genre) VALUES ("Taylor Swift", 2);
INSERT INTO Singers (name, genre) VALUES ("Kid Rock",3);
INSERT INTO Singers (name, genre) VALUES ("Drake", 4);
INSERT INTO Singers (name, genre) VALUES ("Keith Urban", 2);
INSERT INTO Singers (name, genre) VALUES ("Rihanna", 1);
INSERT INTO Singers (name, genre) VALUES ("Kurt Cobain", 3);
INSERT INTO Singers (name, genre) VALUES ("Kelly Clarkson", 1);
INSERT INTO Singers (name, genre) VALUES ("Britney Spears", 1);
INSERT INTO Singers (name, genre) VALUES ("Kendrick Lamar", 4);
INSERT INTO Singers (name, genre) VALUES ("Chris Daughtry", 3);
INSERT INTO Singers (name, genre) VALUES ("Whitney Houston", 1);
INSERT INTO Singers (name, genre) VALUES ("Carrie Underwood", 2);
INSERT INTO Singers (name, genre) VALUES ("Olivia Rodrigo", 1);

CREATE TABLE Stats
(id INTEGER PRIMARY KEY AUTOINCREMENT,
state_born TEXT,
year_born INTEGER,
number_one_hits INTEGER);

INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Ontario", 1994,8);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Louisiana", 1982,2);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Pennsylvania", 1989,9);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES("Michigan", 1971,0);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Ontario", 1984,11);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Northland", 1967,22);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Saint_Michaels", 1988,14);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Washington", 1967,0);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Texas", 1982, 3);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Mississippi", 1981, 4);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Louisiana", 1982, 2);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("North Carolina", 1979, 0);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("New Jersey", 1963, 7);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("Oklahoma", 1983, 21);
INSERT INTO Stats (state_born, year_born,number_one_hits) VALUES ("California", 2003, 2);

CREATE TABLE Music_type
(id INTEGER PRIMARY KEY, genre TEXT);
INSERT INTO Music_type (id, genre) VALUES (1, "Pop");
INSERT INTO Music_type (id, genre) VALUES (2, "Country");
INSERT INTO Music_type (id, genre)  VALUES (3, "Rock");
INSERT INTO music_type (id, genre) VALUES  (4, "Rap");

--What is each singers name with their genre and number of #1 hits they have had? Order by least to greatest.

SELECT Singers.name, music_type.genre, stats.number_one_hits
FROM Singers
LEFT JOIN music_type
ON Singers.genre = music_type.id
JOIN Stats
ON singers.id = stats.id
ORDER BY stats.number_one_hits asc;

--Where is each pop artist from?

SELECT singers.name, stats.state_born
FROM singers
JOIN stats
ON singers.id = stats.id
WHERE singers.genre = 1;

--How many number one hits does each genre have?

SELECT SUM(stats.number_one_hits) AS total_hits, music_type.genre
FROM singers
JOIN stats
ON singers.id = stats.id
JOIN music_type
ON singers.genre = music_type.id
GROUP BY singers.genre;

--What is the average year born for the singers in the country genre?

SELECT ROUND(AVG(stats.year_born)) as average_year_born, music_type.genre
FROM singers
JOIN stats
ON singers.id = stats.id
JOIN music_type
ON singers.genre = music_type.id
WHERE music_type.id = 2;

--What is the total number of hits for pop artists born after 1980? 

SELECT SUM(stats.number_one_hits) AS total_hits, music_type.genre
FROM singers
JOIN stats
ON singers.id = stats.id
JOIN music_type
ON singers.genre = music_type.id
WHERE stats.year_born > 1980
AND singers.genre = 1; 

--Which singers from the country genre were born after 1980?

SELECT singers.name, stats.year_born
FROM singers
JOIN stats
ON singers.id = stats.id
WHERE stats.year_born > 1980
AND singers.genre = 2; 
