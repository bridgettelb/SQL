# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 

SELECT
artist_name,
track_name,
avg(popularity),
avg(danceability),
avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Then I determined who the Top 10 artists are by popularity:

SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10

#I also wanted to know what was the average danceability for the 10 most popular songs?

SELECT AVG(danceability) AS avg_danceability
FROM (
  SELECT track_name, popularity, danceability
  FROM Spotifydata
  ORDER BY popularity DESC
  LIMIT 10)
   Spotifydata;
   
#Which song has the most energy and is the loudest?

SELECT track_name, MAX(energy) AS max_energy_song, MAX(loudness) AS max_loudness_song
FROM Spotifydata;

#What is the average liveness of songs that are mostly accoustic?

SELECT AVG(liveness) AS avg_acoustic_liveness
FROM Spotifydata
WHERE acousticness > 0.7;

#Which artist has the most songs in the top 50?

SELECT COUNT(artist_name) total_songs, artist_name
FROM Spotifydata 
GROUP BY artist_name
ORDER BY COUNT(artist_name) desc
LIMIT 1;

#Which artist has more than 3 songs total in the top 50?

SELECT COUNT(artist_name) total_songs, artist_name
FROM Spotifydata 
GROUP BY artist_name
HAVING total_songs >= 3;

#I decided I wanted to find out if songs with slower tempos were just as popular with songs with faster tempos.

SELECT 
  CASE 
    WHEN tempo < 100 THEN 'Slow'
    WHEN tempo >= 100 AND tempo < 120 THEN 'Moderate'
    ELSE 'Fast'
  END as tempo_group,
  AVG(popularity) as avg_popularity
FROM Spotifydata
GROUP BY tempo_group;

#And then lastly, I wanted to create a table that showed artist with a popularity over 90 to be considered a "Top Star".

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
